!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
HLIST_HEAD	list.h	568;"	d
HLIST_HEAD_INIT	list.h	567;"	d
INIT_HLIST_HEAD	list.h	569;"	d
INIT_HLIST_NODE	list.h	/^static inline void INIT_HLIST_NODE(struct hlist_node *h)$/;"	f
INIT_LIST_HEAD	list.h	/^static inline void INIT_LIST_HEAD(struct list_head *list)$/;"	f
LIST_HEAD	list.h	24;"	d
LIST_HEAD_INIT	gh_list.h	/^static inline void LIST_HEAD_INIT(struct list_head *head)$/;"	f
LIST_HEAD_INIT	gh_list.h	43;"	d
LIST_HEAD_INIT	list.h	22;"	d
_LINUX_LIST_H	list.h	2;"	d
_USE_FUNCTION_	gh_list.h	6;"	d
__LISR_H__	gh_list.h	2;"	d
__hlist_del	list.h	/^static inline void __hlist_del(struct hlist_node *n)$/;"	f
__list_add	list.h	/^static inline void __list_add(struct list_head *new,$/;"	f
__list_cut_position	list.h	/^static inline void __list_cut_position(struct list_head *list,$/;"	f
__list_del	list.h	/^static inline void __list_del(struct list_head * prev, struct list_head * next)$/;"	f
__list_del_entry	list.h	/^static inline void __list_del_entry(struct list_head *entry)$/;"	f
__list_splice	list.h	/^static inline void __list_splice(const struct list_head *list,$/;"	f
container_of	list.h	6;"	d
first	list.h	/^    struct hlist_node *first;$/;"	m	struct:hlist_head	typeref:struct:hlist_head::hlist_node
hlist_add_after	list.h	/^static inline void hlist_add_after(struct hlist_node *n,$/;"	f
hlist_add_before	list.h	/^static inline void hlist_add_before(struct hlist_node *n,$/;"	f
hlist_add_fake	list.h	/^static inline void hlist_add_fake(struct hlist_node *n)$/;"	f
hlist_add_head	list.h	/^static inline void hlist_add_head(struct hlist_node *n, struct hlist_head *h)$/;"	f
hlist_del	list.h	/^static inline void hlist_del(struct hlist_node *n)$/;"	f
hlist_del_init	list.h	/^static inline void hlist_del_init(struct hlist_node *n)$/;"	f
hlist_empty	list.h	/^static inline int hlist_empty(const struct hlist_head *h)$/;"	f
hlist_entry	list.h	660;"	d
hlist_entry_safe	list.h	669;"	d
hlist_for_each	list.h	662;"	d
hlist_for_each_entry	list.h	680;"	d
hlist_for_each_entry_continue	list.h	690;"	d
hlist_for_each_entry_from	list.h	700;"	d
hlist_for_each_entry_safe	list.h	711;"	d
hlist_for_each_safe	list.h	665;"	d
hlist_head	list.h	/^struct hlist_head {$/;"	s
hlist_move_list	list.h	/^static inline void hlist_move_list(struct hlist_head *old,$/;"	f
hlist_node	list.h	/^struct hlist_node {$/;"	s
hlist_unhashed	list.h	/^static inline int hlist_unhashed(const struct hlist_node *h)$/;"	f
list_add	gh_list.h	90;"	d
list_add_tail	list.h	/^static inline void list_add_tail(struct list_head *new, struct list_head *head)$/;"	f
list_cut_position	list.h	/^static inline void list_cut_position(struct list_head *list,$/;"	f
list_data	gh_list.h	98;"	d
list_del	list.h	/^static inline void list_del(struct list_head *entry)$/;"	f
list_del_init	list.h	/^static inline void list_del_init(struct list_head *entry)$/;"	f
list_empty	gh_list.h	/^static inline int list_empty(struct list_head *head)$/;"	f
list_empty	gh_list.h	47;"	d
list_empty	list.h	/^static inline int list_empty(const struct list_head *head)$/;"	f
list_empty_careful	list.h	/^static inline int list_empty_careful(const struct list_head *head)$/;"	f
list_entry	gh_list.h	102;"	d
list_entry	list.h	342;"	d
list_first_entry	list.h	353;"	d
list_first_entry_or_null	list.h	364;"	d
list_for_each	list.h	372;"	d
list_for_each_entry	list.h	410;"	d
list_for_each_entry_continue	list.h	446;"	d
list_for_each_entry_continue_reverse	list.h	460;"	d
list_for_each_entry_from	list.h	473;"	d
list_for_each_entry_reverse	list.h	421;"	d
list_for_each_entry_safe	gh_list.h	105;"	d
list_for_each_entry_safe	list.h	484;"	d
list_for_each_entry_safe_continue	list.h	500;"	d
list_for_each_entry_safe_from	list.h	516;"	d
list_for_each_entry_safe_reverse	list.h	531;"	d
list_for_each_prev	list.h	380;"	d
list_for_each_prev_safe	list.h	399;"	d
list_for_each_safe	list.h	389;"	d
list_head	gh_list.h	/^struct list_head {$/;"	s
list_head	gh_list.h	65;"	d
list_head	list.h	/^struct list_head {$/;"	s
list_head_t	gh_list.h	/^typedef struct list_head  list_head_t;$/;"	t	typeref:struct:list_head
list_insert_after	gh_list.h	56;"	d
list_insert_head	gh_list.h	/^static inline void list_insert_head(struct list_head *head, struct list_head *i)$/;"	f
list_insert_head	gh_list.h	50;"	d
list_insert_tail	gh_list.h	/^static inline void list_insert_tail(struct list_head *head, struct list_head *i)$/;"	f
list_insert_tail	gh_list.h	58;"	d
list_is_last	list.h	/^static inline int list_is_last(const struct list_head *list,$/;"	f
list_is_singular	list.h	/^static inline int list_is_singular(const struct list_head *head)$/;"	f
list_last	gh_list.h	68;"	d
list_move	list.h	/^static inline void list_move(struct list_head *list, struct list_head *head)$/;"	f
list_move_tail	list.h	/^static inline void list_move_tail(struct list_head *list,$/;"	f
list_next	gh_list.h	71;"	d
list_prepare_entry	list.h	434;"	d
list_prev	gh_list.h	74;"	d
list_remove	gh_list.h	77;"	d
list_replace	list.h	/^static inline void list_replace(struct list_head *old,$/;"	f
list_replace_init	list.h	/^static inline void list_replace_init(struct list_head *old,$/;"	f
list_rotate_left	list.h	/^static inline void list_rotate_left(struct list_head *head)$/;"	f
list_safe_reset_next	list.h	549;"	d
list_sort	gh_list.h	/^static inline void list_sort(list_head_t *queue,$/;"	f
list_splice	list.h	/^static inline void list_splice(const struct list_head *list,$/;"	f
list_splice_init	list.h	/^static inline void list_splice_init(struct list_head *list,$/;"	f
list_splice_tail	list.h	/^static inline void list_splice_tail(struct list_head *list,$/;"	f
list_splice_tail_init	list.h	/^static inline void list_splice_tail_init(struct list_head *list,$/;"	f
list_split	gh_list.h	81;"	d
listadd	list.h	/^static inline void listadd(struct list_head *new, struct list_head *head)$/;"	f
next	gh_list.h	/^	struct list_head *next;$/;"	m	struct:list_head	typeref:struct:list_head::list_head
next	list.h	/^    struct hlist_node *next;$/;"	m	struct:hlist_node	typeref:struct:hlist_node::hlist_node
next	list.h	/^    struct list_head *next, *prev;$/;"	m	struct:list_head	typeref:struct:list_head::list_head
pprev	list.h	/^    struct hlist_node **pprev;$/;"	m	struct:hlist_node	typeref:struct:hlist_node::hlist_node
prev	gh_list.h	/^	struct list_head *prev;$/;"	m	struct:list_head	typeref:struct:list_head::list_head
prev	list.h	/^    struct list_head *next, *prev;$/;"	m	struct:list_head	typeref:struct:list_head::
